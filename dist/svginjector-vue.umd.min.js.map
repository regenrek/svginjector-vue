{"version":3,"sources":["webpack://svginjector-vue/webpack/universalModuleDefinition","webpack://svginjector-vue/webpack/bootstrap","webpack://svginjector-vue/./node_modules/core-js/modules/_dom-create.js","webpack://svginjector-vue/./node_modules/core-js/modules/_to-primitive.js","webpack://svginjector-vue/./node_modules/core-js/modules/_global.js","webpack://svginjector-vue/./node_modules/core-js/modules/_fails.js","webpack://svginjector-vue/./node_modules/core-js/modules/es6.function.name.js","webpack://svginjector-vue/./node_modules/core-js/modules/_object-dp.js","webpack://svginjector-vue/./node_modules/core-js/modules/_descriptors.js","webpack://svginjector-vue/./node_modules/core-js/modules/_ie8-dom-define.js","webpack://svginjector-vue/./node_modules/core-js/modules/_an-object.js","webpack://svginjector-vue/./node_modules/core-js/modules/_is-object.js","webpack://svginjector-vue/./node_modules/svg-injector/svg-injector.js","webpack://svginjector-vue/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://svginjector-vue/./src/svg-injector.vue?34aa","webpack://svginjector-vue/src/svg-injector.vue","webpack://svginjector-vue/./src/svg-injector.vue?00cf","webpack://svginjector-vue/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://svginjector-vue/./src/svg-injector.vue","webpack://svginjector-vue/./src/index.js","webpack://svginjector-vue/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isObject","document","is","createElement","it","S","fn","val","toString","valueOf","TypeError","global","window","Math","Function","__g","exec","e","dP","f","FProto","nameRE","NAME","configurable","match","anObject","IE8_DOM_DEFINE","toPrimitive","O","P","Attributes","a","__WEBPACK_AMD_DEFINE_RESULT__","isLocal","location","protocol","hasSvgSupport","implementation","hasFeature","uniqueClasses","list","split","hash","length","out","unshift","join","forEach","Array","scope","len","svgCache","injectCount","injectedElements","requestQueue","ranScripts","cloneSvg","sourceSvg","cloneNode","queueRequest","url","callback","push","processRequestQueue","index","setTimeout","loadSvg","undefined","SVGSVGElement","XMLHttpRequest","httpRequest","onreadystatechange","readyState","status","responseXML","statusText","Document","documentElement","DOMParser","xmlDoc","parser","parseFromString","responseText","getElementsByTagName","open","overrideMimeType","send","injectElement","el","evalScripts","pngFallback","imgUrl","getAttribute","test","indexOf","setAttribute","svg","imgId","imgTitle","classMerge","concat","imgStyle","imgData","filter","attributes","at","dataAttr","element","elementDefs","properties","currentId","newId","iriElementsAndProperties","clipPath","color-profile","cursor","linearGradient","marker","mask","pattern","radialGradient","keys","querySelectorAll","elementsLen","referencingElements","id","j","referencingElementLen","removeAttribute","script","scriptType","scripts","scriptsToEval","k","scriptsLen","innerText","textContent","removeChild","scriptsToEvalLen","styleTags","styleTag","parentNode","replaceChild","perElementFallback","pop","replace","SVGInjector","elements","options","done","eachCallback","each","elementsLoaded","currentScript","src","render","_vm","_h","$createElement","_c","_self","ref","class","className","attrs","staticRenderFns","svg_injectorvue_type_script_lang_js_","props","type","String","default","mounted","svg_injector_default","$refs","img","src_svg_injectorvue_type_script_lang_js_","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","component","src_svg_injector","install","Vue","arguments","SvgInjector","__webpack_exports__"],"mappings":"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","file":"svginjector-vue.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"svginjector-vue\"] = factory();\n\telse\n\t\troot[\"svginjector-vue\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","/**\n * SVGInjector v1.1.3 - Fast, caching, dynamic inline SVG DOM injection library\n * https://github.com/iconic/SVGInjector\n *\n * Copyright (c) 2014-2015 Waybury <hello@waybury.com>\n * @license MIT\n */\n\n(function (window, document) {\n\n  'use strict';\n\n  // Environment\n  var isLocal = window.location.protocol === 'file:';\n  var hasSvgSupport = document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');\n\n  function uniqueClasses(list) {\n    list = list.split(' ');\n\n    var hash = {};\n    var i = list.length;\n    var out = [];\n\n    while (i--) {\n      if (!hash.hasOwnProperty(list[i])) {\n        hash[list[i]] = 1;\n        out.unshift(list[i]);\n      }\n    }\n\n    return out.join(' ');\n  }\n\n  /**\n   * cache (or polyfill for <= IE8) Array.forEach()\n   * source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\n   */\n  var forEach = Array.prototype.forEach || function (fn, scope) {\n    if (this === void 0 || this === null || typeof fn !== 'function') {\n      throw new TypeError();\n    }\n\n    /* jshint bitwise: false */\n    var i, len = this.length >>> 0;\n    /* jshint bitwise: true */\n\n    for (i = 0; i < len; ++i) {\n      if (i in this) {\n        fn.call(scope, this[i], i, this);\n      }\n    }\n  };\n\n  // SVG Cache\n  var svgCache = {};\n\n  var injectCount = 0;\n  var injectedElements = [];\n\n  // Request Queue\n  var requestQueue = [];\n\n  // Script running status\n  var ranScripts = {};\n\n  var cloneSvg = function (sourceSvg) {\n    return sourceSvg.cloneNode(true);\n  };\n\n  var queueRequest = function (url, callback) {\n    requestQueue[url] = requestQueue[url] || [];\n    requestQueue[url].push(callback);\n  };\n\n  var processRequestQueue = function (url) {\n    for (var i = 0, len = requestQueue[url].length; i < len; i++) {\n      // Make these calls async so we avoid blocking the page/renderer\n      /* jshint loopfunc: true */\n      (function (index) {\n        setTimeout(function () {\n          requestQueue[url][index](cloneSvg(svgCache[url]));\n        }, 0);\n      })(i);\n      /* jshint loopfunc: false */\n    }\n  };\n\n  var loadSvg = function (url, callback) {\n    if (svgCache[url] !== undefined) {\n      if (svgCache[url] instanceof SVGSVGElement) {\n        // We already have it in cache, so use it\n        callback(cloneSvg(svgCache[url]));\n      }\n      else {\n        // We don't have it in cache yet, but we are loading it, so queue this request\n        queueRequest(url, callback);\n      }\n    }\n    else {\n\n      if (!window.XMLHttpRequest) {\n        callback('Browser does not support XMLHttpRequest');\n        return false;\n      }\n\n      // Seed the cache to indicate we are loading this URL already\n      svgCache[url] = {};\n      queueRequest(url, callback);\n\n      var httpRequest = new XMLHttpRequest();\n\n      httpRequest.onreadystatechange = function () {\n        // readyState 4 = complete\n        if (httpRequest.readyState === 4) {\n\n          // Handle status\n          if (httpRequest.status === 404 || httpRequest.responseXML === null) {\n            callback('Unable to load SVG file: ' + url);\n\n            if (isLocal) callback('Note: SVG injection ajax calls do not work locally without adjusting security setting in your browser. Or consider using a local webserver.');\n\n            callback();\n            return false;\n          }\n\n          // 200 success from server, or 0 when using file:// protocol locally\n          if (httpRequest.status === 200 || (isLocal && httpRequest.status === 0)) {\n\n            /* globals Document */\n            if (httpRequest.responseXML instanceof Document) {\n              // Cache it\n              svgCache[url] = httpRequest.responseXML.documentElement;\n            }\n            /* globals -Document */\n\n            // IE9 doesn't create a responseXML Document object from loaded SVG,\n            // and throws a \"DOM Exception: HIERARCHY_REQUEST_ERR (3)\" error when injected.\n            //\n            // So, we'll just create our own manually via the DOMParser using\n            // the the raw XML responseText.\n            //\n            // :NOTE: IE8 and older doesn't have DOMParser, but they can't do SVG either, so...\n            else if (DOMParser && (DOMParser instanceof Function)) {\n              var xmlDoc;\n              try {\n                var parser = new DOMParser();\n                xmlDoc = parser.parseFromString(httpRequest.responseText, 'text/xml');\n              }\n              catch (e) {\n                xmlDoc = undefined;\n              }\n\n              if (!xmlDoc || xmlDoc.getElementsByTagName('parsererror').length) {\n                callback('Unable to parse SVG file: ' + url);\n                return false;\n              }\n              else {\n                // Cache it\n                svgCache[url] = xmlDoc.documentElement;\n              }\n            }\n\n            // We've loaded a new asset, so process any requests waiting for it\n            processRequestQueue(url);\n          }\n          else {\n            callback('There was a problem injecting the SVG: ' + httpRequest.status + ' ' + httpRequest.statusText);\n            return false;\n          }\n        }\n      };\n\n      httpRequest.open('GET', url);\n\n      // Treat and parse the response as XML, even if the\n      // server sends us a different mimetype\n      if (httpRequest.overrideMimeType) httpRequest.overrideMimeType('text/xml');\n\n      httpRequest.send();\n    }\n  };\n\n  // Inject a single element\n  var injectElement = function (el, evalScripts, pngFallback, callback) {\n\n    // Grab the src or data-src attribute\n    var imgUrl = el.getAttribute('data-src') || el.getAttribute('src');\n\n    // We can only inject SVG\n    if (!(/\\.svg/i).test(imgUrl)) {\n      callback('Attempted to inject a file with a non-svg extension: ' + imgUrl);\n      return;\n    }\n\n    // If we don't have SVG support try to fall back to a png,\n    // either defined per-element via data-fallback or data-png,\n    // or globally via the pngFallback directory setting\n    if (!hasSvgSupport) {\n      var perElementFallback = el.getAttribute('data-fallback') || el.getAttribute('data-png');\n\n      // Per-element specific PNG fallback defined, so use that\n      if (perElementFallback) {\n        el.setAttribute('src', perElementFallback);\n        callback(null);\n      }\n      // Global PNG fallback directoriy defined, use the same-named PNG\n      else if (pngFallback) {\n        el.setAttribute('src', pngFallback + '/' + imgUrl.split('/').pop().replace('.svg', '.png'));\n        callback(null);\n      }\n      // um...\n      else {\n        callback('This browser does not support SVG and no PNG fallback was defined.');\n      }\n\n      return;\n    }\n\n    // Make sure we aren't already in the process of injecting this element to\n    // avoid a race condition if multiple injections for the same element are run.\n    // :NOTE: Using indexOf() only _after_ we check for SVG support and bail,\n    // so no need for IE8 indexOf() polyfill\n    if (injectedElements.indexOf(el) !== -1) {\n      return;\n    }\n\n    // Remember the request to inject this element, in case other injection\n    // calls are also trying to replace this element before we finish\n    injectedElements.push(el);\n\n    // Try to avoid loading the orginal image src if possible.\n    el.setAttribute('src', '');\n\n    // Load it up\n    loadSvg(imgUrl, function (svg) {\n\n      if (typeof svg === 'undefined' || typeof svg === 'string') {\n        callback(svg);\n        return false;\n      }\n\n      var imgId = el.getAttribute('id');\n      if (imgId) {\n        svg.setAttribute('id', imgId);\n      }\n\n      var imgTitle = el.getAttribute('title');\n      if (imgTitle) {\n        svg.setAttribute('title', imgTitle);\n      }\n\n      // Concat the SVG classes + 'injected-svg' + the img classes\n      var classMerge = [].concat(svg.getAttribute('class') || [], 'injected-svg', el.getAttribute('class') || []).join(' ');\n      svg.setAttribute('class', uniqueClasses(classMerge));\n\n      var imgStyle = el.getAttribute('style');\n      if (imgStyle) {\n        svg.setAttribute('style', imgStyle);\n      }\n\n      // Copy all the data elements to the svg\n      var imgData = [].filter.call(el.attributes, function (at) {\n        return (/^data-\\w[\\w\\-]*$/).test(at.name);\n      });\n      forEach.call(imgData, function (dataAttr) {\n        if (dataAttr.name && dataAttr.value) {\n          svg.setAttribute(dataAttr.name, dataAttr.value);\n        }\n      });\n\n      // Make sure any internally referenced clipPath ids and their\n      // clip-path references are unique.\n      //\n      // This addresses the issue of having multiple instances of the\n      // same SVG on a page and only the first clipPath id is referenced.\n      //\n      // Browsers often shortcut the SVG Spec and don't use clipPaths\n      // contained in parent elements that are hidden, so if you hide the first\n      // SVG instance on the page, then all other instances lose their clipping.\n      // Reference: https://bugzilla.mozilla.org/show_bug.cgi?id=376027\n\n      // Handle all defs elements that have iri capable attributes as defined by w3c: http://www.w3.org/TR/SVG/linking.html#processingIRI\n      // Mapping IRI addressable elements to the properties that can reference them:\n      var iriElementsAndProperties = {\n        'clipPath': ['clip-path'],\n        'color-profile': ['color-profile'],\n        'cursor': ['cursor'],\n        'filter': ['filter'],\n        'linearGradient': ['fill', 'stroke'],\n        'marker': ['marker', 'marker-start', 'marker-mid', 'marker-end'],\n        'mask': ['mask'],\n        'pattern': ['fill', 'stroke'],\n        'radialGradient': ['fill', 'stroke']\n      };\n\n      var element, elementDefs, properties, currentId, newId;\n      Object.keys(iriElementsAndProperties).forEach(function (key) {\n        element = key;\n        properties = iriElementsAndProperties[key];\n\n        elementDefs = svg.querySelectorAll('defs ' + element + '[id]');\n        for (var i = 0, elementsLen = elementDefs.length; i < elementsLen; i++) {\n          currentId = elementDefs[i].id;\n          newId = currentId + '-' + injectCount;\n\n          // All of the properties that can reference this element type\n          var referencingElements;\n          forEach.call(properties, function (property) {\n            // :NOTE: using a substring match attr selector here to deal with IE \"adding extra quotes in url() attrs\"\n            referencingElements = svg.querySelectorAll('[' + property + '*=\"' + currentId + '\"]');\n            for (var j = 0, referencingElementLen = referencingElements.length; j < referencingElementLen; j++) {\n              referencingElements[j].setAttribute(property, 'url(#' + newId + ')');\n            }\n          });\n\n          elementDefs[i].id = newId;\n        }\n      });\n\n      // Remove any unwanted/invalid namespaces that might have been added by SVG editing tools\n      svg.removeAttribute('xmlns:a');\n\n      // Post page load injected SVGs don't automatically have their script\n      // elements run, so we'll need to make that happen, if requested\n\n      // Find then prune the scripts\n      var scripts = svg.querySelectorAll('script');\n      var scriptsToEval = [];\n      var script, scriptType;\n\n      for (var k = 0, scriptsLen = scripts.length; k < scriptsLen; k++) {\n        scriptType = scripts[k].getAttribute('type');\n\n        // Only process javascript types.\n        // SVG defaults to 'application/ecmascript' for unset types\n        if (!scriptType || scriptType === 'application/ecmascript' || scriptType === 'application/javascript') {\n\n          // innerText for IE, textContent for other browsers\n          script = scripts[k].innerText || scripts[k].textContent;\n\n          // Stash\n          scriptsToEval.push(script);\n\n          // Tidy up and remove the script element since we don't need it anymore\n          svg.removeChild(scripts[k]);\n        }\n      }\n\n      // Run/Eval the scripts if needed\n      if (scriptsToEval.length > 0 && (evalScripts === 'always' || (evalScripts === 'once' && !ranScripts[imgUrl]))) {\n        for (var l = 0, scriptsToEvalLen = scriptsToEval.length; l < scriptsToEvalLen; l++) {\n\n          // :NOTE: Yup, this is a form of eval, but it is being used to eval code\n          // the caller has explictely asked to be loaded, and the code is in a caller\n          // defined SVG file... not raw user input.\n          //\n          // Also, the code is evaluated in a closure and not in the global scope.\n          // If you need to put something in global scope, use 'window'\n          new Function(scriptsToEval[l])(window); // jshint ignore:line\n        }\n\n        // Remember we already ran scripts for this svg\n        ranScripts[imgUrl] = true;\n      }\n\n      // :WORKAROUND:\n      // IE doesn't evaluate <style> tags in SVGs that are dynamically added to the page.\n      // This trick will trigger IE to read and use any existing SVG <style> tags.\n      //\n      // Reference: https://github.com/iconic/SVGInjector/issues/23\n      var styleTags = svg.querySelectorAll('style');\n      forEach.call(styleTags, function (styleTag) {\n        styleTag.textContent += '';\n      });\n\n      // Replace the image with the svg\n      el.parentNode.replaceChild(svg, el);\n\n      // Now that we no longer need it, drop references\n      // to the original element so it can be GC'd\n      delete injectedElements[injectedElements.indexOf(el)];\n      el = null;\n\n      // Increment the injected count\n      injectCount++;\n\n      callback(svg);\n    });\n  };\n\n  /**\n   * SVGInjector\n   *\n   * Replace the given elements with their full inline SVG DOM elements.\n   *\n   * :NOTE: We are using get/setAttribute with SVG because the SVG DOM spec differs from HTML DOM and\n   * can return other unexpected object types when trying to directly access svg properties.\n   * ex: \"className\" returns a SVGAnimatedString with the class value found in the \"baseVal\" property,\n   * instead of simple string like with HTML Elements.\n   *\n   * @param {mixes} Array of or single DOM element\n   * @param {object} options\n   * @param {function} callback\n   * @return {object} Instance of SVGInjector\n   */\n  var SVGInjector = function (elements, options, done) {\n\n    // Options & defaults\n    options = options || {};\n\n    // Should we run the scripts blocks found in the SVG\n    // 'always' - Run them every time\n    // 'once' - Only run scripts once for each SVG\n    // [false|'never'] - Ignore scripts\n    var evalScripts = options.evalScripts || 'always';\n\n    // Location of fallback pngs, if desired\n    var pngFallback = options.pngFallback || false;\n\n    // Callback to run during each SVG injection, returning the SVG injected\n    var eachCallback = options.each;\n\n    // Do the injection...\n    if (elements.length !== undefined) {\n      var elementsLoaded = 0;\n      forEach.call(elements, function (element) {\n        injectElement(element, evalScripts, pngFallback, function (svg) {\n          if (eachCallback && typeof eachCallback === 'function') eachCallback(svg);\n          if (done && elements.length === ++elementsLoaded) done(elementsLoaded);\n        });\n      });\n    }\n    else {\n      if (elements) {\n        injectElement(elements, evalScripts, pngFallback, function (svg) {\n          if (eachCallback && typeof eachCallback === 'function') eachCallback(svg);\n          if (done) done(1);\n          elements = null;\n        });\n      }\n      else {\n        if (done) done(0);\n      }\n    }\n  };\n\n  /* global module, exports: true, define */\n  // Node.js or CommonJS\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = exports = SVGInjector;\n  }\n  // AMD support\n  else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return SVGInjector;\n    });\n  }\n  // Otherwise, attach to window as global\n  else if (typeof window === 'object') {\n    window.SVGInjector = SVGInjector;\n  }\n  /* global -module, -exports, -define */\n\n}(window, document));\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('img',{ref:\"img\",class:_vm.className,attrs:{\"src\":_vm.src}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <img ref=\"img\" :class=\"className\" :src=\"src\">\n  </div>\n</template>\n<script>\nimport SVGInjector from 'svg-injector'\n\nexport default {\n    name: 'SvgInjector',\n    props: {\n        className: {\n            type: String,\n            default: ''\n        },\n        src: {\n            type: String,\n            default: ''\n        },\n        callback: {\n            type: Function,\n            default: () => true\n        },\n        options: {\n            type: Object,\n            default: undefined\n        }\n    },\n    mounted() {\n        SVGInjector(this.$refs.img, this.options, this.callback);\n    }\n}\n</script>","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./svg-injector.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./svg-injector.vue?vue&type=script&lang=js&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./svg-injector.vue?vue&type=template&id=a8885ab8&\"\nimport script from \"./svg-injector.vue?vue&type=script&lang=js&\"\nexport * from \"./svg-injector.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import SvgInjector from './svg-injector.vue'\n\nexport default {\n    install(Vue, options = {}) {\n        Vue.component(SvgInjector.name, SvgInjector)\n    }\n}","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"sourceRoot":""}